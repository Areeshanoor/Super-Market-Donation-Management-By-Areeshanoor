# -*- coding: utf-8 -*-
"""Supermarket Donation Management.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AI0KqIpy07h469JWpyHttZgl8AZUNJtu
"""

# Constants
NUM_CHARITIES = 3

# Function to set up the donation system
def setup_donation_system():
    charities = []
    totals = [0] * NUM_CHARITIES

    for i in range(1, NUM_CHARITIES + 1):
        charity_name = input(f"Enter the name of Charity {i}: ")
        charities.append(charity_name)

    print("\nCharities:")
    for i, charity in enumerate(charities, start=1):
        print(f"{i}. {charity}")

    return charities, totals

# Function to record and total each donation
def record_and_total_donation(charities, totals):
    while True:
        try:
            choice = int(input("Enter the number of the charity (1, 2, or 3) or -1 to show totals: "))
        except ValueError:
            print("Invalid input. Please enter a valid number.")
            continue

        if choice == -1:
            show_totals(charities, totals)
            break
        elif 1 <= choice <= NUM_CHARITIES:
            bill_amount = float(input("Enter the customer's shopping bill amount: "))
            donation = bill_amount * 0.01
            totals[choice - 1] += donation
            print(f"Donation of ${donation:.2f} recorded for {charities[choice - 1]}.")

        else:
            print("Invalid choice. Please enter 1, 2, 3, or -1.")

# Function to show the totals so far
def show_totals(charities, totals):
    sorted_totals = sorted(zip(charities, totals), key=lambda x: x[1], reverse=True)
    grand_total = sum(totals)

    print("\nCharity Totals:")
    for charity, total in sorted_totals:
        print(f"{charity}: ${total:.2f}")

    print(f"\nGRAND TOTAL DONATED TO CHARITY: ${grand_total:.2f}")

# Main program
def main():
    print("TASK 1 – Set up the donation system")
    charities, totals = setup_donation_system()

    print("\nTASK 2 – Record and total each donation")
    record_and_total_donation(charities, totals)

if __name__ == "__main__":
    main()

